apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: spring-petclinic
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: spring-petclinic
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: spring-petclinic
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/version: 3.2.1
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
          spring-boot-convention/service-intent-postgres
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"spring-petclinic","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"web"},"name":"spring-petclinic","namespace":"spring-petclinic"},"spec":{"build":{"env":[{"name":"BP_GRADLE_BUILD_FILE","value":"skip"},{"name":"BP_JVM_VERSION","value":"17"}]},"params":[{"name":"annotations","value":{"autoscaling.knative.dev/minScale":"1"}},{"name":"gitops_repository_name","value":"trp-gitops-spring-petclinic"},{"name":"scanning_source_policy","value":"lax-scan-policy"},{"name":"scanning_image_policy","value":"lax-scan-policy"}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/spring-projects/spring-petclinic"}}}}
        services.conventions.carto.run/postgres: postgresql/42.6.0
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: spring-petclinic
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: spring-petclinic
        conventions.carto.run/framework: spring-boot
        services.conventions.carto.run/postgres: workload
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: spring-petclinic
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: registry.gcp.ellin.net/tap/supply-chain/spring-petclinic-spring-petclinic@sha256:34108d14385f1ad3b87907101cec2ee0ed764da1d97fef07a9adbaba7feacea4
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

